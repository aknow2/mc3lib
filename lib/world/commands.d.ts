import { Items } from '../constants';
import { Exec, Position } from '../command/executor';
import { Count, Fill, CompareCount } from '../command/result';
export declare const createSetBlockCommand: (sendCommand: Exec<void>) => (position: Position, tileName: Items, tileData?: number) => Promise<void | import("../command/executor").ErrorMsg>;
export declare const createClone: (sendCommand: Exec<Count>) => (begin: Position, end: Position, destination: Position, maskMode?: string, cloneMode?: string, tileName?: string, tileData?: number) => Promise<import("../command/executor").ErrorMsg | Count>;
export declare const createSummon: (sendCommand: Exec<Count>) => (spawnPos: Position, entityType: string) => Promise<import("../command/executor").ErrorMsg | Count>;
export declare const createExecuteAsOther: (sendCommand: Exec<void>) => (target: string, position: Position, command: string) => Promise<void | import("../command/executor").ErrorMsg>;
export declare const createKill: (sendCommand: Exec<void>) => (target: string) => Promise<void | import("../command/executor").ErrorMsg>;
export declare const createDetect: (sendCommand: Exec<void>) => (target: string, position: Position, detect: string, detectPos: Position, detectBlock: string, detectData: number, command: string) => Promise<void | import("../command/executor").ErrorMsg>;
export declare const createFill: (sendCommand: Exec<Fill>) => (from: Position, to: Position, tileName: string, tileData: number, intData?: number, oldBlockHandling?: number, replaceTileName?: string, replaceDataValue?: number) => Promise<import("../command/executor").ErrorMsg | Fill>;
export declare const createWeather: (sendCommand: Exec<void>) => (type: string, duration: number) => Promise<void | import("../command/executor").ErrorMsg>;
export declare const createTpTargetPos: (sendCommand: Exec<void>) => (victim: string, destination: Position, yRot?: number, xRot?: number) => Promise<void | import("../command/executor").ErrorMsg>;
export declare const createTpTargetToTarget: (sendCommand: Exec<void>) => (victim: string, destination: string, yRot?: number, xRot?: number) => Promise<void | import("../command/executor").ErrorMsg>;
export declare const createChangeTimeByNumber: (sendCommand: Exec<void>) => (time: number) => Promise<void | import("../command/executor").ErrorMsg>;
export declare const createChangeTimeByName: (sendCommand: Exec<void>) => (time: string) => Promise<void | import("../command/executor").ErrorMsg>;
export declare const createTestForBlocks: (sendCommand: Exec<CompareCount>) => (compareCount: number, matches: boolean, begin: Position, end: Position, destination: Position, mode?: string) => Promise<import("../command/executor").ErrorMsg | CompareCount>;
export declare const createTestForBlock: (sendCommand: Exec<CompareCount>) => (position: Position, tileName: string) => Promise<import("../command/executor").ErrorMsg | CompareCount>;
export declare const createGive: (sendCommand: Exec<void>) => (player: string, itemName: string, data: number, amount?: number) => Promise<void | import("../command/executor").ErrorMsg>;
